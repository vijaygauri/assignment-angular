/*
 * grunt-json-to-object
 * https://github.com/letsmakesense/grunt-json-to-object
 *
 * Copyright (c) 2015 Peter Klein (Let's make sense GmbH)
 * Licensed under the MIT license.
 */

'use strict';

module.exports = function(grunt) {

  // Please see the Grunt documentation for more information regarding task
  // creation: http://gruntjs.com/creating-tasks

  grunt.registerMultiTask('json_to_object', 'Reads pure JSON data from a file and creates a Javascript file holding an object with the data', function() {
    // Merge task-specific and/or target-specific options with these defaults.
    var options = this.options({
      varname: 'jsonObj'
    });

    // Iterate over all specified file groups.
    this.files.forEach(function(f) {
      var items = [];
      // Concat specified files.
      var result = f.src.filter(function(filepath) {
        // Warn on and remove invalid source files (if nonull was set).
        if (!grunt.file.exists(filepath)) {
          grunt.log.warn('Source file "' + filepath + '" not found.');
          return false;
        } else {
          return true;
        }
      }).map(function(filepath) {
        var filename = filepath.match(/.*\/([^/]+)\.json$/i);
        if(!filename){
          grunt.log.warn('Source file "' + filepath + '" is no JSON file.');
          return false;
        }
        var name = filename[1];
        // Read file source.
        var content = grunt.file.read(filepath);
        items.push([name, JSON.parse(content)]);
        return true;
      });

      if(!result){
        return false;
      }

      var objs = {};

      for (var i = 0; i < items.length;
           i++
      ) {
        if(items[i]){
          var obj = items[i];
          objs[obj[0]] = obj[1];
        }
      }

      var rootvar;

      var j = 0;
      for(var prop in objs){
        rootvar = prop;
        j++;
      }
      if(j === 0){
        grunt.log.warn('No JSON-Data found.');
        return false;
      }
      var destobj = objs[prop];

      if(options.varname){
        rootvar = options.varname;
      }

      if(j > 1){
        destobj = objs;
      }
      // Handle options.
      var src = "var " + rootvar + " = " + JSON.stringify(destobj);

      // Write the destination file.
      grunt.file.write(f.dest, src);

      // Print a success message.
      grunt.log.writeln('File "' + f.dest + '" created.');
    });
  });

};
